# Task ID: 6
# Title: CS2 GSI Listener & Configuration
# Status: done
# Dependencies: 4
# Priority: high
# Description: Configure the Node.js backend to receive Game State Integration (GSI) data from CS2. This involves setting up a local HTTP endpoint that CS2 can send POST requests to.
# Details:
Create an Express route (e.g., `/gsi`) that listens for POST requests. CS2 GSI requires a `gamestate_integration_ai_coach.cfg` file in the CS2 `cfg` directory. This file should point to the backend's local IP and port (e.g., `http://127.0.0.1:3001/gsi`). The backend should parse the incoming JSON payload. Implement a basic check to ensure the request is from CS2 (e.g., using a shared authentication token if configured in GSI).

# Test Strategy:
Launch CS2 with the GSI config. Verify that the backend receives GSI data by logging the incoming payloads. Check for continuous data flow during gameplay.

# Subtasks:
## 1. Develop Express GSI Endpoint [done]
### Dependencies: None
### Description: Implement an Express.js server with a dedicated HTTP endpoint (e.g., /gsi) configured to listen for incoming POST requests from CS2's Game State Integration. Ensure it can parse JSON payloads.
### Details:
This involves setting up the basic Express server, defining the route, and adding initial logging to confirm endpoint activation.

## 2. Generate gamestate_integration_ai_coach.cfg [done]
### Dependencies: 6.1
### Description: Create the `gamestate_integration_ai_coach.cfg` file with the necessary GSI configuration, including the `uri` pointing to the local Express GSI endpoint (e.g., `http://localhost:3000/gsi`) and specifying the desired data intervals and event types.
### Details:
The configuration file must be a valid JSON structure as expected by CS2's GSI system. Ensure the URI matches the endpoint created in Subtask 1.

## 3. Deploy GSI Configuration File to CS2 [done]
### Dependencies: 6.2
### Description: Place the generated `gamestate_integration_ai_coach.cfg` file into the correct CS2 game directory, typically `Steam/steamapps/common/Counter-Strike Global Offensive/game/csgo/cfg` (or similar path for CS2).
### Details:
Verify the exact path for CS2's GSI configuration files. Incorrect placement will prevent CS2 from loading the configuration.

## 4. Verify GSI Data Reception [done]
### Dependencies: 6.1, 6.3
### Description: Launch CS2 and play a match (e.g., against bots) to trigger GSI events. Monitor the Express GSI endpoint's logs to confirm successful reception and parsing of game state data from CS2.
### Details:
Check the server console for incoming data. If no data is received, troubleshoot network connectivity, firewall settings, and the correctness of the GSI configuration file and its placement.

